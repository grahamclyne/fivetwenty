Terminals unused in grammar

   tCHARCONST


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement statements
    3           | %empty

    4 statement: tREAD '(' tIDENTIFIER ')' ';'
    5          | tPRINT '(' exp ')' ';'
    6          | assignment
    7          | ifstatement
    8          | tWHILE '(' exp ')' '{' statements '}'
    9          | comment

   10 ifstatement: tIF '(' exp ')' '{' statements '}'
   11            | tIF '(' exp ')' '{' statements '}' elseifstatement
   12            | tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}'

   13 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' elseifstatement
   14                | tELSE tIF '(' exp ')' '{' statements '}'
   15                | tELSE tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}'

   16 assignment: tVAR tIDENTIFIER ':' type '=' exp ';'
   17           | tIDENTIFIER '=' exp ';'
   18           | tVAR tIDENTIFIER ':' type ';'

   19 comment: tCOMMENT tIDENTIFIER comment
   20        | tIDENTIFIER

   21 type: tBOOLEAN
   22     | tINT
   23     | tFLOAT
   24     | tSTRING

   25 exp: tIDENTIFIER
   26    | tINTVAL
   27    | tFLOATVAL
   28    | tTRUE
   29    | tSTRINGVAL
   30    | tFALSE
   31    | exp '+' exp
   32    | exp '*' exp
   33    | exp '-' exp
   34    | exp '/' exp
   35    | exp tEQ exp
   36    | exp tGEQ exp
   37    | exp tLEQ exp
   38    | exp tNEQ exp
   39    | exp '<' exp
   40    | exp '>' exp
   41    | exp tAND exp
   42    | exp tOR exp
   43    | '-' exp
   44    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 8 10 11 12 13 14 15 44
')' (41) 4 5 8 10 11 12 13 14 15 44
'*' (42) 32
'+' (43) 31
'-' (45) 33 43
'/' (47) 34
':' (58) 16 18
';' (59) 4 5 16 17 18
'<' (60) 39
'=' (61) 16 17
'>' (62) 40
'{' (123) 8 10 11 12 13 14 15
'}' (125) 8 10 11 12 13 14 15
error (256)
tVAR (258) 16 18
tWHILE (259) 8
tFLOAT (260) 23
tREAD (261) 4
tELSE (262) 12 13 14 15
tBOOLEAN (263) 21
tINT (264) 22
tIF (265) 10 11 12 13 14 15
tPRINT (266) 5
tCHARCONST (267)
tSTRING (268) 24
tCOMMENT (269) 19
tEQ (270) 35
tLEQ (271) 37
tGEQ (272) 36
tNEQ (273) 38
tAND (274) 41
tOR (275) 42
tINTVAL (276) 26
tIDENTIFIER (277) 4 16 17 18 19 20 25
tFLOATVAL (278) 27
tSTRINGVAL (279) 29
tTRUE (280) 28
tFALSE (281) 30


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
statements (42)
    on left: 2 3, on right: 1 2 8 10 11 12 13 14 15
statement (43)
    on left: 4 5 6 7 8 9, on right: 2
ifstatement (44)
    on left: 10 11 12, on right: 7
elseifstatement (45)
    on left: 13 14 15, on right: 11 13
assignment (46)
    on left: 16 17 18, on right: 6
comment (47)
    on left: 19 20, on right: 9 19
type (48)
    on left: 21 22 23 24, on right: 16 18
exp (49)
    on left: 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    43 44, on right: 5 8 10 11 12 13 14 15 16 17 31 32 33 34 35 36
    37 38 39 40 41 42 43 44


State 0

    0 $accept: . program $end

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    program      go to state 8
    statements   go to state 9
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 1

   16 assignment: tVAR . tIDENTIFIER ':' type '=' exp ';'
   18           | tVAR . tIDENTIFIER ':' type ';'

    tIDENTIFIER  shift, and go to state 14


State 2

    8 statement: tWHILE . '(' exp ')' '{' statements '}'

    '('  shift, and go to state 15


State 3

    4 statement: tREAD . '(' tIDENTIFIER ')' ';'

    '('  shift, and go to state 16


State 4

   10 ifstatement: tIF . '(' exp ')' '{' statements '}'
   11            | tIF . '(' exp ')' '{' statements '}' elseifstatement
   12            | tIF . '(' exp ')' '{' statements '}' tELSE '{' statements '}'

    '('  shift, and go to state 17


State 5

    5 statement: tPRINT . '(' exp ')' ';'

    '('  shift, and go to state 18


State 6

   19 comment: tCOMMENT . tIDENTIFIER comment

    tIDENTIFIER  shift, and go to state 19


State 7

   17 assignment: tIDENTIFIER . '=' exp ';'
   20 comment: tIDENTIFIER .

    '='  shift, and go to state 20

    $default  reduce using rule 20 (comment)


State 8

    0 $accept: program . $end

    $end  shift, and go to state 21


State 9

    1 program: statements .

    $default  reduce using rule 1 (program)


State 10

    2 statements: statement . statements

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 22
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 11

    7 statement: ifstatement .

    $default  reduce using rule 7 (statement)


State 12

    6 statement: assignment .

    $default  reduce using rule 6 (statement)


State 13

    9 statement: comment .

    $default  reduce using rule 9 (statement)


State 14

   16 assignment: tVAR tIDENTIFIER . ':' type '=' exp ';'
   18           | tVAR tIDENTIFIER . ':' type ';'

    ':'  shift, and go to state 23


State 15

    8 statement: tWHILE '(' . exp ')' '{' statements '}'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 32


State 16

    4 statement: tREAD '(' . tIDENTIFIER ')' ';'

    tIDENTIFIER  shift, and go to state 33


State 17

   10 ifstatement: tIF '(' . exp ')' '{' statements '}'
   11            | tIF '(' . exp ')' '{' statements '}' elseifstatement
   12            | tIF '(' . exp ')' '{' statements '}' tELSE '{' statements '}'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 34


State 18

    5 statement: tPRINT '(' . exp ')' ';'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 35


State 19

   19 comment: tCOMMENT tIDENTIFIER . comment

    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 36

    comment  go to state 37


State 20

   17 assignment: tIDENTIFIER '=' . exp ';'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 38


State 21

    0 $accept: program $end .

    $default  accept


State 22

    2 statements: statement statements .

    $default  reduce using rule 2 (statements)


State 23

   16 assignment: tVAR tIDENTIFIER ':' . type '=' exp ';'
   18           | tVAR tIDENTIFIER ':' . type ';'

    tFLOAT    shift, and go to state 39
    tBOOLEAN  shift, and go to state 40
    tINT      shift, and go to state 41
    tSTRING   shift, and go to state 42

    type  go to state 43


State 24

   26 exp: tINTVAL .

    $default  reduce using rule 26 (exp)


State 25

   25 exp: tIDENTIFIER .

    $default  reduce using rule 25 (exp)


State 26

   27 exp: tFLOATVAL .

    $default  reduce using rule 27 (exp)


State 27

   29 exp: tSTRINGVAL .

    $default  reduce using rule 29 (exp)


State 28

   28 exp: tTRUE .

    $default  reduce using rule 28 (exp)


State 29

   30 exp: tFALSE .

    $default  reduce using rule 30 (exp)


State 30

   43 exp: '-' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 44


State 31

   44 exp: '(' . exp ')'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 45


State 32

    8 statement: tWHILE '(' exp . ')' '{' statements '}'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ')'   shift, and go to state 58


State 33

    4 statement: tREAD '(' tIDENTIFIER . ')' ';'

    ')'  shift, and go to state 59


State 34

   10 ifstatement: tIF '(' exp . ')' '{' statements '}'
   11            | tIF '(' exp . ')' '{' statements '}' elseifstatement
   12            | tIF '(' exp . ')' '{' statements '}' tELSE '{' statements '}'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ')'   shift, and go to state 60


State 35

    5 statement: tPRINT '(' exp . ')' ';'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ')'   shift, and go to state 61


State 36

   20 comment: tIDENTIFIER .

    $default  reduce using rule 20 (comment)


State 37

   19 comment: tCOMMENT tIDENTIFIER comment .

    $default  reduce using rule 19 (comment)


State 38

   17 assignment: tIDENTIFIER '=' exp . ';'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ';'   shift, and go to state 62


State 39

   23 type: tFLOAT .

    $default  reduce using rule 23 (type)


State 40

   21 type: tBOOLEAN .

    $default  reduce using rule 21 (type)


State 41

   22 type: tINT .

    $default  reduce using rule 22 (type)


State 42

   24 type: tSTRING .

    $default  reduce using rule 24 (type)


State 43

   16 assignment: tVAR tIDENTIFIER ':' type . '=' exp ';'
   18           | tVAR tIDENTIFIER ':' type . ';'

    ';'  shift, and go to state 63
    '='  shift, and go to state 64


State 44

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp
   43    | '-' exp .

    $default  reduce using rule 43 (exp)


State 45

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp
   44    | '(' exp . ')'

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ')'   shift, and go to state 65


State 46

   35 exp: exp tEQ . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 66


State 47

   37 exp: exp tLEQ . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 67


State 48

   36 exp: exp tGEQ . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 68


State 49

   38 exp: exp tNEQ . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 69


State 50

   41 exp: exp tAND . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 70


State 51

   42 exp: exp tOR . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 71


State 52

   39 exp: exp '<' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 72


State 53

   40 exp: exp '>' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 73


State 54

   32 exp: exp '*' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 74


State 55

   34 exp: exp '/' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 75


State 56

   31 exp: exp '+' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 76


State 57

   33 exp: exp '-' . exp

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 77


State 58

    8 statement: tWHILE '(' exp ')' . '{' statements '}'

    '{'  shift, and go to state 78


State 59

    4 statement: tREAD '(' tIDENTIFIER ')' . ';'

    ';'  shift, and go to state 79


State 60

   10 ifstatement: tIF '(' exp ')' . '{' statements '}'
   11            | tIF '(' exp ')' . '{' statements '}' elseifstatement
   12            | tIF '(' exp ')' . '{' statements '}' tELSE '{' statements '}'

    '{'  shift, and go to state 80


State 61

    5 statement: tPRINT '(' exp ')' . ';'

    ';'  shift, and go to state 81


State 62

   17 assignment: tIDENTIFIER '=' exp ';' .

    $default  reduce using rule 17 (assignment)


State 63

   18 assignment: tVAR tIDENTIFIER ':' type ';' .

    $default  reduce using rule 18 (assignment)


State 64

   16 assignment: tVAR tIDENTIFIER ':' type '=' . exp ';'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 82


State 65

   44 exp: '(' exp ')' .

    $default  reduce using rule 44 (exp)


State 66

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   35    | exp tEQ exp .
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57

    $default  reduce using rule 35 (exp)


State 67

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   37    | exp tLEQ exp .
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 37 (exp)


State 68

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   36    | exp tGEQ exp .
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 36 (exp)


State 69

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   38    | exp tNEQ exp .
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57

    $default  reduce using rule 38 (exp)


State 70

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   41    | exp tAND exp .
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57

    $default  reduce using rule 41 (exp)


State 71

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp
   42    | exp tOR exp .

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57

    $default  reduce using rule 42 (exp)


State 72

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   39    | exp '<' exp .
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 39 (exp)


State 73

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   40    | exp '>' exp .
   41    | exp . tAND exp
   42    | exp . tOR exp

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 40 (exp)


State 74

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   32    | exp '*' exp .
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 32 (exp)


State 75

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   34    | exp '/' exp .
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    '+'  shift, and go to state 56
    '-'  shift, and go to state 57

    $default  reduce using rule 34 (exp)


State 76

   31 exp: exp . '+' exp
   31    | exp '+' exp .
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    $default  reduce using rule 31 (exp)


State 77

   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   33    | exp '-' exp .
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    $default  reduce using rule 33 (exp)


State 78

    8 statement: tWHILE '(' exp ')' '{' . statements '}'

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 83
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 79

    4 statement: tREAD '(' tIDENTIFIER ')' ';' .

    $default  reduce using rule 4 (statement)


State 80

   10 ifstatement: tIF '(' exp ')' '{' . statements '}'
   11            | tIF '(' exp ')' '{' . statements '}' elseifstatement
   12            | tIF '(' exp ')' '{' . statements '}' tELSE '{' statements '}'

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 84
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 81

    5 statement: tPRINT '(' exp ')' ';' .

    $default  reduce using rule 5 (statement)


State 82

   16 assignment: tVAR tIDENTIFIER ':' type '=' exp . ';'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ';'   shift, and go to state 85


State 83

    8 statement: tWHILE '(' exp ')' '{' statements . '}'

    '}'  shift, and go to state 86


State 84

   10 ifstatement: tIF '(' exp ')' '{' statements . '}'
   11            | tIF '(' exp ')' '{' statements . '}' elseifstatement
   12            | tIF '(' exp ')' '{' statements . '}' tELSE '{' statements '}'

    '}'  shift, and go to state 87


State 85

   16 assignment: tVAR tIDENTIFIER ':' type '=' exp ';' .

    $default  reduce using rule 16 (assignment)


State 86

    8 statement: tWHILE '(' exp ')' '{' statements '}' .

    $default  reduce using rule 8 (statement)


State 87

   10 ifstatement: tIF '(' exp ')' '{' statements '}' .
   11            | tIF '(' exp ')' '{' statements '}' . elseifstatement
   12            | tIF '(' exp ')' '{' statements '}' . tELSE '{' statements '}'

    tELSE  shift, and go to state 88

    $default  reduce using rule 10 (ifstatement)

    elseifstatement  go to state 89


State 88

   12 ifstatement: tIF '(' exp ')' '{' statements '}' tELSE . '{' statements '}'
   13 elseifstatement: tELSE . tIF '(' exp ')' '{' statements '}' elseifstatement
   14                | tELSE . tIF '(' exp ')' '{' statements '}'
   15                | tELSE . tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}'

    tIF  shift, and go to state 90
    '{'  shift, and go to state 91


State 89

   11 ifstatement: tIF '(' exp ')' '{' statements '}' elseifstatement .

    $default  reduce using rule 11 (ifstatement)


State 90

   13 elseifstatement: tELSE tIF . '(' exp ')' '{' statements '}' elseifstatement
   14                | tELSE tIF . '(' exp ')' '{' statements '}'
   15                | tELSE tIF . '(' exp ')' '{' statements '}' tELSE '{' statements '}'

    '('  shift, and go to state 92


State 91

   12 ifstatement: tIF '(' exp ')' '{' statements '}' tELSE '{' . statements '}'

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 93
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 92

   13 elseifstatement: tELSE tIF '(' . exp ')' '{' statements '}' elseifstatement
   14                | tELSE tIF '(' . exp ')' '{' statements '}'
   15                | tELSE tIF '(' . exp ')' '{' statements '}' tELSE '{' statements '}'

    tINTVAL      shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    tFLOATVAL    shift, and go to state 26
    tSTRINGVAL   shift, and go to state 27
    tTRUE        shift, and go to state 28
    tFALSE       shift, and go to state 29
    '-'          shift, and go to state 30
    '('          shift, and go to state 31

    exp  go to state 94


State 93

   12 ifstatement: tIF '(' exp ')' '{' statements '}' tELSE '{' statements . '}'

    '}'  shift, and go to state 95


State 94

   13 elseifstatement: tELSE tIF '(' exp . ')' '{' statements '}' elseifstatement
   14                | tELSE tIF '(' exp . ')' '{' statements '}'
   15                | tELSE tIF '(' exp . ')' '{' statements '}' tELSE '{' statements '}'
   31 exp: exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '-' exp
   34    | exp . '/' exp
   35    | exp . tEQ exp
   36    | exp . tGEQ exp
   37    | exp . tLEQ exp
   38    | exp . tNEQ exp
   39    | exp . '<' exp
   40    | exp . '>' exp
   41    | exp . tAND exp
   42    | exp . tOR exp

    tEQ   shift, and go to state 46
    tLEQ  shift, and go to state 47
    tGEQ  shift, and go to state 48
    tNEQ  shift, and go to state 49
    tAND  shift, and go to state 50
    tOR   shift, and go to state 51
    '<'   shift, and go to state 52
    '>'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '+'   shift, and go to state 56
    '-'   shift, and go to state 57
    ')'   shift, and go to state 96


State 95

   12 ifstatement: tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}' .

    $default  reduce using rule 12 (ifstatement)


State 96

   13 elseifstatement: tELSE tIF '(' exp ')' . '{' statements '}' elseifstatement
   14                | tELSE tIF '(' exp ')' . '{' statements '}'
   15                | tELSE tIF '(' exp ')' . '{' statements '}' tELSE '{' statements '}'

    '{'  shift, and go to state 97


State 97

   13 elseifstatement: tELSE tIF '(' exp ')' '{' . statements '}' elseifstatement
   14                | tELSE tIF '(' exp ')' '{' . statements '}'
   15                | tELSE tIF '(' exp ')' '{' . statements '}' tELSE '{' statements '}'

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 98
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 98

   13 elseifstatement: tELSE tIF '(' exp ')' '{' statements . '}' elseifstatement
   14                | tELSE tIF '(' exp ')' '{' statements . '}'
   15                | tELSE tIF '(' exp ')' '{' statements . '}' tELSE '{' statements '}'

    '}'  shift, and go to state 99


State 99

   13 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' . elseifstatement
   14                | tELSE tIF '(' exp ')' '{' statements '}' .
   15                | tELSE tIF '(' exp ')' '{' statements '}' . tELSE '{' statements '}'

    tELSE  shift, and go to state 100

    $default  reduce using rule 14 (elseifstatement)

    elseifstatement  go to state 101


State 100

   13 elseifstatement: tELSE . tIF '(' exp ')' '{' statements '}' elseifstatement
   14                | tELSE . tIF '(' exp ')' '{' statements '}'
   15                | tELSE . tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}'
   15                | tELSE tIF '(' exp ')' '{' statements '}' tELSE . '{' statements '}'

    tIF  shift, and go to state 90
    '{'  shift, and go to state 102


State 101

   13 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' elseifstatement .

    $default  reduce using rule 13 (elseifstatement)


State 102

   15 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' tELSE '{' . statements '}'

    tVAR         shift, and go to state 1
    tWHILE       shift, and go to state 2
    tREAD        shift, and go to state 3
    tIF          shift, and go to state 4
    tPRINT       shift, and go to state 5
    tCOMMENT     shift, and go to state 6
    tIDENTIFIER  shift, and go to state 7

    $default  reduce using rule 3 (statements)

    statements   go to state 103
    statement    go to state 10
    ifstatement  go to state 11
    assignment   go to state 12
    comment      go to state 13


State 103

   15 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' tELSE '{' statements . '}'

    '}'  shift, and go to state 104


State 104

   15 elseifstatement: tELSE tIF '(' exp ')' '{' statements '}' tELSE '{' statements '}' .

    $default  reduce using rule 15 (elseifstatement)
